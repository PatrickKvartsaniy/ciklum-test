// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package main

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Request message for creating a new customer
type Customer struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Phone                string   `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Customer) Reset()         { *m = Customer{} }
func (m *Customer) String() string { return proto.CompactTextString(m) }
func (*Customer) ProtoMessage()    {}
func (*Customer) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *Customer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Customer.Unmarshal(m, b)
}
func (m *Customer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Customer.Marshal(b, m, deterministic)
}
func (m *Customer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Customer.Merge(m, src)
}
func (m *Customer) XXX_Size() int {
	return xxx_messageInfo_Customer.Size(m)
}
func (m *Customer) XXX_DiscardUnknown() {
	xxx_messageInfo_Customer.DiscardUnknown(m)
}

var xxx_messageInfo_Customer proto.InternalMessageInfo

func (m *Customer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Customer) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Customer) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type CustomerResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomerResponse) Reset()         { *m = CustomerResponse{} }
func (m *CustomerResponse) String() string { return proto.CompactTextString(m) }
func (*CustomerResponse) ProtoMessage()    {}
func (*CustomerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *CustomerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerResponse.Unmarshal(m, b)
}
func (m *CustomerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerResponse.Marshal(b, m, deterministic)
}
func (m *CustomerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerResponse.Merge(m, src)
}
func (m *CustomerResponse) XXX_Size() int {
	return xxx_messageInfo_CustomerResponse.Size(m)
}
func (m *CustomerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerResponse proto.InternalMessageInfo

func (m *CustomerResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*Customer)(nil), "main.Customer")
	proto.RegisterType((*CustomerResponse)(nil), "main.CustomerResponse")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 172 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xc9, 0x4d, 0xcc, 0xcc, 0x53, 0xf2, 0xe2, 0xe2, 0x70,
	0x2e, 0x2d, 0x2e, 0xc9, 0xcf, 0x4d, 0x2d, 0x12, 0x12, 0xe2, 0x62, 0xc9, 0x4b, 0xcc, 0x4d, 0x95,
	0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x85, 0x44, 0xb8, 0x58, 0x53, 0x73, 0x13, 0x33,
	0x73, 0x24, 0x98, 0xc0, 0x82, 0x10, 0x0e, 0x48, 0xb4, 0x20, 0x23, 0x3f, 0x2f, 0x55, 0x82, 0x19,
	0x22, 0x0a, 0xe6, 0x28, 0xe9, 0x70, 0x09, 0xc0, 0xcc, 0x0a, 0x4a, 0x2d, 0x2e, 0xc8, 0xcf, 0x2b,
	0x4e, 0x15, 0x92, 0xe0, 0x62, 0x2f, 0x2e, 0x4d, 0x4e, 0x4e, 0x2d, 0x2e, 0x06, 0x1b, 0xcb, 0x11,
	0x04, 0xe3, 0x1a, 0xb9, 0x71, 0xb1, 0x85, 0x17, 0x65, 0x96, 0xa4, 0x16, 0x09, 0xd9, 0x70, 0xf1,
	0x39, 0x17, 0xa5, 0x26, 0x96, 0xa4, 0xc2, 0x5d, 0xc2, 0xa7, 0x07, 0x72, 0x9c, 0x1e, 0x8c, 0x2f,
	0x25, 0x86, 0xca, 0x87, 0x99, 0xae, 0xc4, 0xa0, 0xc1, 0x98, 0xc4, 0x06, 0xf6, 0x8e, 0x31, 0x20,
	0x00, 0x00, 0xff, 0xff, 0xd6, 0x10, 0xa9, 0xff, 0xdb, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WriterClient is the client API for Writer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WriterClient interface {
	// Create a new Customer - A simple RPC
	CreateCustomer(ctx context.Context, opts ...grpc.CallOption) (Writer_CreateCustomerClient, error)
}

type writerClient struct {
	cc *grpc.ClientConn
}

func NewWriterClient(cc *grpc.ClientConn) WriterClient {
	return &writerClient{cc}
}

func (c *writerClient) CreateCustomer(ctx context.Context, opts ...grpc.CallOption) (Writer_CreateCustomerClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Writer_serviceDesc.Streams[0], "/main.Writer/CreateCustomer", opts...)
	if err != nil {
		return nil, err
	}
	x := &writerCreateCustomerClient{stream}
	return x, nil
}

type Writer_CreateCustomerClient interface {
	Send(*Customer) error
	CloseAndRecv() (*CustomerResponse, error)
	grpc.ClientStream
}

type writerCreateCustomerClient struct {
	grpc.ClientStream
}

func (x *writerCreateCustomerClient) Send(m *Customer) error {
	return x.ClientStream.SendMsg(m)
}

func (x *writerCreateCustomerClient) CloseAndRecv() (*CustomerResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(CustomerResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// WriterServer is the server API for Writer service.
type WriterServer interface {
	// Create a new Customer - A simple RPC
	CreateCustomer(Writer_CreateCustomerServer) error
}

func RegisterWriterServer(s *grpc.Server, srv WriterServer) {
	s.RegisterService(&_Writer_serviceDesc, srv)
}

func _Writer_CreateCustomer_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(WriterServer).CreateCustomer(&writerCreateCustomerServer{stream})
}

type Writer_CreateCustomerServer interface {
	SendAndClose(*CustomerResponse) error
	Recv() (*Customer, error)
	grpc.ServerStream
}

type writerCreateCustomerServer struct {
	grpc.ServerStream
}

func (x *writerCreateCustomerServer) SendAndClose(m *CustomerResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *writerCreateCustomerServer) Recv() (*Customer, error) {
	m := new(Customer)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Writer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.Writer",
	HandlerType: (*WriterServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CreateCustomer",
			Handler:       _Writer_CreateCustomer_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "api.proto",
}
